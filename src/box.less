/*
 * box
 */

.define-box(@prefix, @property) {
  // padding
  .for(@nums, {
    // all
    .@{prefix}-@{value} { @{property}: @value * 1px; }
    // top
    .@{prefix}-top-@{value} { @{property}-top: @value * 1px; }
    // right
    .@{prefix}-right-@{value} { @{property}-right: @value * 1px; }
    // bottom
    .@{prefix}-bottom-@{value} { @{property}-bottom: @value * 1px; }
    // left
    .@{prefix}-left-@{value} { @{property}-left: @value * 1px; }
    // x
    .@{prefix}-x-@{value} {
      @{property}-left: @value * 1px;
      @{property}-right: @value * 1px;
    }
    // y
    .@{prefix}-y-@{value} {
      @{property}-top: @value * 1px;
      @{property}-bottom: @value * 1px;
    }
  });
}

.define-box-shorthand(@nums, @prefix, @property) {
  // padding
  .for(@nums, {
    // all
    .@{prefix}@{value} { @{property}: @value * 1px; }
    // top
    .@{prefix}t@{value} { @{property}-top: @value * 1px; }
    // right
    .@{prefix}r@{value} { @{property}-right: @value * 1px; }
    // bottom
    .@{prefix}b@{value} { @{property}-bottom: @value * 1px; }
    // left
    .@{prefix}l@{value} { @{property}-left: @value * 1px; }
    // x
    .@{prefix}x@{value} { @{property}-left: @value * 1px; @{property}-right: @value * 1px; }
    // y
    .@{prefix}y@{value} { @{property}-top: @value * 1px; @{property}-bottom: @value * 1px; }
  });
}

/*
 * padding
 */
.define-box-shorthand(@nums-1-100, p, padding) !important;

/*
 * margin
 */
.define-box-shorthand(@nums-1-100, m, margin) !important;
.ml-auto, .mla { margin-left: auto !important; }
.mr-auto, .mra { margin-right: auto !important; }
.mx-auto, .mxa { .ml-auto; .mr-auto; }

.mb0-last {
  &:last-child {
    margin-bottom: 0 !important;
  }
}
.mr0-last {
  &:last-child {
    margin-right: 0 !important;
  }
}
// ネガティブマージン
.for(@nums-1-32, {
  // all
  .mn@{value} { margin: @value * -1px; }
  // top
  .mtn@{value} { margin-top: @value * -1px; }
  // right
  .mrn@{value} { margin-right: @value * -1px; }
  // bottom
  .mbn@{value} { margin-bottom: @value * -1px; }
  // left
  .mln@{value} { margin-left: @value * -1px; }
  // x
  .mxn@{value} { margin-left: @value * -1px; margin-right: @value * -1px; }
  // y
  .myn@{value} { margin-top: @value * -1px; margin-bottom: @value * -1px; }
}) !important;


/*
 * border
 */
.border {
  border-style: solid;
  border-width: 1px;
  border-color: var(--border-color);
}
.border-top {
  border-top-style: solid;
  border-top-width: 1px;
  border-color: var(--border-color);
}
.border-right {
  border-right-style: solid;
  border-right-width: 1px;
  border-color: var(--border-color);
}
.border-bottom {
  border-bottom-style: solid;
  border-bottom-width: 1px;
  border-color: var(--border-color);
}
.border-left {
  border-left-style: solid;
  border-left-width: 1px;
  border-color: var(--border-color);
}
.border-dark {
  border: 1px solid rgba(0, 0, 0, 0.1);
}
.border-light {
  border: 1px solid rgba(255, 255, 255, 0.1);
}
.border-bottom-not-last {
  &:not(:last-child) {
    .border-bottom;
  }
}
.border-right-not-last {
  &:not(:last-child) {
    .border-right;
  }
}

// font-weight
.for(@nums-1-32, {
  .border-width-@{value} { border-width: @value * 1px; }
});

.border-none {
  border: none !important;
}

/*
 * border-radius
 */
.circle {
  border-radius: 50%;
}
.rounded {
  border-radius: 3px;
}
.for(1 2 3 4 5 6 7 8 9 10 100, {
  .rounded-@{value} { border-radius: @value * 1px !important; }
});

/*
 *
 */
.define-rect(@key, @width, @height) {
  .@{key} {
    position: relative;

    &:before {
      content: '';
      display: block;
      padding-top: (@height/@width) * 100%;
    }
    &> * {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
  }
}
.define-rect(square, 1, 1);
.define-rect(rect, 3, 2);
.define-rect(rect-16_9, 16, 9);
.define-rect(rect-3_2, 3, 2);
.define-rect(rect-3_2, 5, 4);
.define-rect(rect-3_2, 7, 5);
.define-rect(rect-ogp, 1200, 630);




// grid
.define-box-gird-shorthand(@nums, @prefix, @property) {
  // padding
  .for(@nums, {
    // all
    .@{prefix}@{value}g { @{property}: ~"calc( var(--grid) * @{value})"; }
    // top
    .@{prefix}t@{value}g { @{property}-top: ~"calc( var(--grid) * @{value})"; }
    // right
    .@{prefix}r@{value}g { @{property}-right: ~"calc( var(--grid) * @{value})"; }
    // bottom
    .@{prefix}b@{value}g { @{property}-bottom: ~"calc( var(--grid) * @{value})"; }
    // left
    .@{prefix}l@{value}g { @{property}-left: ~"calc( var(--grid) * @{value})"; }
    // x
    .@{prefix}x@{value}g {
      @{property}-left: ~"calc( var(--grid) * @{value})";
      @{property}-right: ~"calc( var(--grid) * @{value})";
    }
    // y
    .@{prefix}y@{value}g {
      @{property}-top: ~"calc( var(--grid) * @{value})";
      @{property}-bottom: ~"calc( var(--grid) * @{value})";
    }
  });
}

.define-box-gird-shorthand(1 2 3 4, p, padding) !important;


// space
.define-box-space-shorthand(@nums, @prefix, @property) {
  // padding
  .for(@nums, {
    // all
    .@{prefix}@{value}s { @{property}: ~"var(--space-@{value})"; }
    // top
    .@{prefix}t@{value}s { @{property}-top: ~"var(--space-@{value})"; }
    // right
    .@{prefix}r@{value}s { @{property}-right: ~"var(--space-@{value})"; }
    // bottom
    .@{prefix}b@{value}s { @{property}-bottom: ~"var(--space-@{value})"; }
    // left
    .@{prefix}l@{value}s { @{property}-left: ~"var(--space-@{value})"; }
    // x
    .@{prefix}x@{value}s {
      @{property}-left: ~"var(--space-@{value})";
      @{property}-right: ~"var(--space-@{value})";
    }
    // y
    .@{prefix}y@{value}s {
      @{property}-top: ~"var(--space-@{value})";
      @{property}-bottom: ~"var(--space-@{value})";
    }
  });
}

.define-box-space-shorthand(1 2 3 4, p, padding) !important;
